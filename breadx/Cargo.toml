#               Copyright John Nunley, 2022.
# Distributed under the Boost Software License, Version 1.0.
#       (See accompanying file LICENSE or copy at
#         https://www.boost.org/LICENSE_1_0.txt)

[package]
name = "breadx"
version = "3.1.0"
authors = ["notgull <jtnunley01@gmail.com>"]
edition = "2018"
description = "Pure-Rust X11 connection implementation with a focus on adaptability"
license = "BSL-1.0"
homepage = "https://github.com/bread-graphics/breadx#readme"
repository = "https://github.com/bread-graphics/breadx"
documentation = "https://docs.rs/breadx"

[dependencies]
advance = { version = "0.1.0", optional = true }
ahash = { version = "0.7.6", default-features = false, features = ["compile-time-rng"] }
async-io = { version = "1", optional = true }
blocking = { version = "1", optional = true }
bytemuck = { version = "1.9.1" }
cfg-if = "1"
concurrent-queue = { version = "1.2.2", optional = true }
fionread = { version = "0.1.1", optional = true }
futures-util = { version = "0.3.21", default-features = false, features = ["alloc"], optional = true }
gethostname = { version = "0.2.3", optional = true }
hashbrown = { version = "0.11.2", default-features = false }
nix = { version = "0.24.1", optional = true }
parking_lot = { version = "0.12.0", optional = true }
socket2 = { version = "0.4", features = ["all"], optional = true }
tokio = { version = "1.19", features = ["net", "rt"], optional = true }
tracing = { version = "0.1.34", default-features = false }
x11rb-protocol = { version = "~0.10", default-features = false }

[dev-dependencies]
async-std = { version = "1.11.0", features = ["attributes"] }
chrono = "0.4.19"
euclid = "0.22.7"
ordered-float = "3.0.0"
spin_on = "0.1.1"
tokio = { version = "1.19", features = ["macros", "io-std", "io-util", "sync", "time", "tracing"] }
tokio-stream = "0.1.9"
tracing-subscriber = "0.3.11"
uds_windows = "1.0.2"

[features]
default = ["std"]
std = ["advance", "ahash/std", "fionread", "gethostname", "nix", "socket2", "x11rb-protocol/std", "x11rb-protocol/resource_manager"]
async = ["futures-util", "std"]
async-std-support = ["async", "async-io", "blocking"]
tokio-support = ["async", "tokio"]

sync_display = ["concurrent-queue", "std"]
pl = ["sync_display", "parking_lot"]

composite = ["xfixes", "x11rb-protocol/composite"]
damage = ["xfixes", "x11rb-protocol/damage"]
dpms = ["x11rb-protocol/dpms"]
dri2 = ["x11rb-protocol/dri2"]
dri3 = ["x11rb-protocol/dri3"]
glx = ["x11rb-protocol/glx"]
present = ["randr", "xfixes", "sync", "x11rb-protocol/present"]
randr = ["render", "x11rb-protocol/randr"]
record = ["x11rb-protocol/record"]
render = ["x11rb-protocol/render"]
res = ["x11rb-protocol/res"]
screensaver = ["x11rb-protocol/screensaver"]
shape = ["x11rb-protocol/shape"]
shm = ["x11rb-protocol/shm"]
sync = ["x11rb-protocol/sync"]
xevie = ["x11rb-protocol/xevie"]
xf86dri = ["x11rb-protocol/xf86dri"]
xf86vidmode = ["x11rb-protocol/xf86vidmode"]
xfixes = ["render", "shape", "x11rb-protocol/xfixes"]
xinerama = ["x11rb-protocol/xinerama"]
xinput = ["xfixes", "x11rb-protocol/xinput"]
xkb = ["x11rb-protocol/xkb"]
xprint = ["x11rb-protocol/xprint"]
xselinux = ["x11rb-protocol/xselinux"]
xtest = ["x11rb-protocol/xtest"]
xv = ["shm", "x11rb-protocol/xv"]
xvmc = ["xv", "x11rb-protocol/xvmc"]

all-extensions = [
    "composite",
    "damage",
    "dpms",
    "dri2",
    "dri3",
    "glx",
    "present",
    "randr",
    "record",
    "render",
    "res",
    "screensaver",
    "shape",
    "shm",
    "sync",
    "xevie",
    "xf86dri",
    "xf86vidmode",
    "xfixes",
    "xinerama",
    "xinput",
    "xkb",
    "xprint",
    "xselinux",
    "xtest",
    "xv",
    "xvmc",
]

[package.metadata.docs.rs]
all-features = true